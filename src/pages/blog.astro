---
import { SEO } from 'config'
import BaseLayout from '@/layouts/BaseLayout.astro'
import PostCard from '@/components/PostCard.astro'
import type { MDXInstance } from 'astro'
import type { Frontmatter, SiteMetadata } from '@/types'

const metadata: SiteMetadata = {
  title: SEO.getTitle('Blog'),
  description:
    'I write about web development, programming, and other stuff that I find interesting.',
}

const posts = await Astro.glob<Frontmatter>('./blog/*.mdx')
const nonDraftPosts = posts.filter(({ frontmatter }) => !frontmatter.draft)
const sortedPosts = nonDraftPosts.sort(
  ({ frontmatter: { publishedAt: a } }, { frontmatter: { publishedAt: b } }) =>
    new Date(b).valueOf() - new Date(a).valueOf()
)
const postsByYear = sortedPosts.reduce((acc: Record<number, MDXInstance<Frontmatter>[]>, post) => {
  const year = new Date(post.frontmatter.publishedAt).getFullYear()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {})
const sortedYears = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a))
---

<BaseLayout {...metadata}>
  <div class='mb-16'>
    <h2 class='mb-4 text-3xl font-bold tracking-tight md:text-5xl'>Blog</h2>
    <p class='text-gray-600 dark:text-gray-300'>
      I write about web development, programming, and other stuff that I find interesting.
    </p>
  </div>
  {
    nonDraftPosts.length ? (
      <div class='space-y-4'>
        {sortedYears.map((year) => (
          <>
            <h3 class='text-xl font-semibold'>{year}</h3>
            <ol class='space-y-4'>
              {postsByYear[+year].map(({ frontmatter }) => (
                <li>
                  <PostCard {...frontmatter} />
                </li>
              ))}
            </ol>
          </>
        ))}
      </div>
    ) : (
      <p class='text-gray-600 dark:text-gray-300'>No posts yet.</p>
    )
  }
</BaseLayout>
